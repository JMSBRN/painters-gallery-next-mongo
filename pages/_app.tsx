import type { AppProps } from 'next/app';
import '../styles/main.scss';
import Layout from '@/components/layout/Layout';
import Header from '@/components/header/Header';
import Footer from '@/components/footer/Footer';
import { useState } from 'react';
import Head from 'next/head';
import { Provider } from 'react-redux';
import store from '@/srore/store';
import Router from 'next/router';
import NextNProgress from 'nextjs-progressbar';
import NProgress from 'nprogress';

export default function App({ Component, pageProps }: AppProps) {
  const [isDark, setIsDark] = useState<boolean>(false);
  return (
    <>
      <Head>
        <title>Painters-Gallery</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Provider store={store}>
        <div className={isDark ? 'theme-dark' : 'theme'}>
          <Header isDark={isDark} setIsDark={setIsDark} />
          <NextNProgress
             color="#cb1414"
             startPosition={0.3}
             stopDelayMs={200}
             height={3}
             options={{ showSpinner: false }}
             transformCSS={(css) => {
              // css is the default css string. You can modify it and return it or return your own css.
              const modifiedCss = `
              /* add your custom css here */
              ${css}
  
              /* modify the progress bar height */
              #nprogress .bar {
                margin-top: 80px;
                height: 5px;
              }
  
              /* modify the progress bar color */
              #nprogress .peg {
                display: none;
              }
              #nprogress .bar {
                background-color: rgba(206, 42, 42, 0.6);
              }
              #nprogress .spinner-icon {
                border-top-color: #29D;
                border-left-color: #29D;
              }
            `;
              return <style>{modifiedCss}</style>;
            }}
          />
          <Layout>
            <Component {...pageProps} />
          </Layout>
          <Footer />
        </div>
      </Provider>
    </>
  );
}

Router.events.on('routeChangeStart', () => {
  NProgress.start();
});

Router.events.on('routeChangeComplete', () => {
  NProgress.done();
});

Router.events.on('routeChangeError', () => {
  NProgress.done();
});